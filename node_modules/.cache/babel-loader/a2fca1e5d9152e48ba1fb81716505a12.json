{"ast":null,"code":"export default class InstaService {\n  constructor() {\n    this.getResource = async url => {\n      const res = await fetch(`${this._apiBase}${url}`);\n\n      if (!res.ok) {\n        throw new Error(`could not fetch ${url};recieved ${res.status}`);\n      }\n\n      return await res.json();\n    };\n\n    this.getAllPosts = async () => {\n      const res = await this.getResource('/posts/');\n      return res;\n    };\n\n    this.getAllPhotos = async () => {\n      const res = await this.getResource('/myPhotos/');\n      return res.map(this._transformPosts);\n      console.log({\n        alt\n      });\n    };\n\n    this._transformPosts = post => {\n      return {\n        src: post.src,\n        alt: post.alt\n      };\n    };\n\n    this._apiBase = \"http://localhost:3000\";\n  }\n\n}","map":{"version":3,"sources":["C:/Users/beka/Desktop/insta/src/services/instaService.js"],"names":["InstaService","constructor","getResource","url","res","fetch","_apiBase","ok","Error","status","json","getAllPosts","getAllPhotos","map","_transformPosts","console","log","alt","post","src"],"mappings":"AAAA,eAAe,MAAMA,YAAN,CAAmB;AAC9BC,EAAAA,WAAW,GAAE;AAAA,SAIbC,WAJa,GAIC,MAAOC,GAAP,IAAc;AACxB,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAE,KAAKC,QAAS,GAAEH,GAAI,EAAxB,CAAvB;;AAEA,UAAG,CAACC,GAAG,CAACG,EAAR,EAAW;AACP,cAAM,IAAIC,KAAJ,CAAW,mBAAkBL,GAAI,aAAYC,GAAG,CAACK,MAAO,EAAxD,CAAN;AACH;;AACD,aAAO,MAAML,GAAG,CAACM,IAAJ,EAAb;AACH,KAXY;;AAAA,SAYbC,WAZa,GAYC,YAAW;AACrB,YAAMP,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAiB,SAAjB,CAAlB;AACA,aAAOE,GAAP;AACH,KAfY;;AAAA,SAkBbQ,YAlBa,GAkBE,YAAW;AACtB,YAAMR,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAiB,YAAjB,CAAlB;AACA,aAAOE,GAAG,CAACS,GAAJ,CAAQ,KAAKC,eAAb,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACC,QAAAA;AAAD,OAAZ;AACH,KAtBY;;AAAA,SAuBbH,eAvBa,GAuBMI,IAAD,IAAS;AACvB,aAAM;AACFC,QAAAA,GAAG,EAAED,IAAI,CAACC,GADR;AAEFF,QAAAA,GAAG,EAAEC,IAAI,CAACD;AAFR,OAAN;AAIH,KA5BY;;AACT,SAAKX,QAAL,GAAe,uBAAf;AACH;;AAH6B","sourcesContent":["export default class InstaService {\r\n    constructor(){\r\n        this._apiBase =\"http://localhost:3000\";\r\n    }\r\n\r\n    getResource = async (url) =>{\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n        \r\n        if(!res.ok){\r\n            throw new Error(`could not fetch ${url};recieved ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    }\r\n    getAllPosts = async () =>{\r\n        const res = await this.getResource('/posts/');\r\n        return res;\r\n    }\r\n\r\n\r\n    getAllPhotos = async () =>{\r\n        const res = await this.getResource('/myPhotos/');\r\n        return res.map(this._transformPosts);\r\n        console.log({alt})\r\n    }\r\n    _transformPosts = (post) =>{\r\n        return{\r\n            src: post.src,\r\n            alt: post.alt\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}