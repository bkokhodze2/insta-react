{"ast":null,"code":"export default class InstaService {\n  constructor() {\n    this.getResource = async url => {\n      const res = await fetch(`${this._apiBase}${url}`);\n\n      if (!res.ok) {\n        throw new Error(`could not fetch ${url};recieved ${res.status}`);\n      }\n\n      return await res.json();\n    };\n\n    this.getAllPosts = async () => {\n      const res = await this.getResource('/posts/');\n      return res;\n    };\n\n    this.getAllUser = async () => {\n      const res = await this.getResource('/posts/');\n      return res.map(this._transformUser);\n    };\n\n    this._transformUser = user => {\n      return {\n        src: user.src,\n        alt: user.alt,\n        name: user.name,\n        id: user.id\n      };\n    };\n\n    this.getAllPhotos = async () => {\n      const res = await this.getResource('/myPhotos/');\n      return res.map(this._transformPosts);\n    };\n\n    this._transformPosts = photo => {\n      return {\n        src: photo.src,\n        alt: photo.alt,\n        id: photo.id\n      };\n    };\n\n    this._apiBase = \"http://localhost:3000\";\n  }\n\n}","map":{"version":3,"sources":["C:/Users/beka/Desktop/insta-react/src/services/instaService.js"],"names":["InstaService","constructor","getResource","url","res","fetch","_apiBase","ok","Error","status","json","getAllPosts","getAllUser","map","_transformUser","user","src","alt","name","id","getAllPhotos","_transformPosts","photo"],"mappings":"AAAA,eAAe,MAAMA,YAAN,CAAmB;AAC9BC,EAAAA,WAAW,GAAE;AAAA,SAIbC,WAJa,GAIC,MAAOC,GAAP,IAAc;AACxB,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAE,KAAKC,QAAS,GAAEH,GAAI,EAAxB,CAAvB;;AACA,UAAG,CAACC,GAAG,CAACG,EAAR,EAAW;AACP,cAAM,IAAIC,KAAJ,CAAW,mBAAkBL,GAAI,aAAYC,GAAG,CAACK,MAAO,EAAxD,CAAN;AACH;;AAAA,aAAO,MAAML,GAAG,CAACM,IAAJ,EAAb;AACJ,KATY;;AAAA,SAWbC,WAXa,GAWC,YAAW;AACrB,YAAMP,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAiB,SAAjB,CAAlB;AACA,aAAOE,GAAP;AAEH,KAfY;;AAAA,SAiBbQ,UAjBa,GAiBA,YAAW;AACpB,YAAMR,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAiB,SAAjB,CAAlB;AACA,aAAOE,GAAG,CAACS,GAAJ,CAAQ,KAAKC,cAAb,CAAP;AAEH,KArBY;;AAAA,SAwBbA,cAxBa,GAwBKC,IAAD,IAAS;AACtB,aAAM;AACFC,QAAAA,GAAG,EAAED,IAAI,CAACC,GADR;AAEFC,QAAAA,GAAG,EAAEF,IAAI,CAACE,GAFR;AAGFC,QAAAA,IAAI,EAAEH,IAAI,CAACG,IAHT;AAIFC,QAAAA,EAAE,EAAEJ,IAAI,CAACI;AAJP,OAAN;AAOH,KAhCY;;AAAA,SAqCbC,YArCa,GAqCE,YAAW;AACtB,YAAMhB,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAiB,YAAjB,CAAlB;AACA,aAAOE,GAAG,CAACS,GAAJ,CAAQ,KAAKQ,eAAb,CAAP;AAEH,KAzCY;;AAAA,SA0CbA,eA1Ca,GA0CMC,KAAD,IAAU;AACxB,aAAM;AACFN,QAAAA,GAAG,EAAEM,KAAK,CAACN,GADT;AAEFC,QAAAA,GAAG,EAAEK,KAAK,CAACL,GAFT;AAGFE,QAAAA,EAAE,EAAEG,KAAK,CAACH;AAHR,OAAN;AAMH,KAjDY;;AACT,SAAKb,QAAL,GAAe,uBAAf;AACH;;AAH6B","sourcesContent":["export default class InstaService {\r\n    constructor(){\r\n        this._apiBase =\"http://localhost:3000\";\r\n    }\r\n\r\n    getResource = async (url) =>{\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n        if(!res.ok){\r\n            throw new Error(`could not fetch ${url};recieved ${res.status}`);\r\n        }return await res.json();\r\n    }\r\n    \r\n    getAllPosts = async () =>{\r\n        const res = await this.getResource('/posts/');\r\n        return res;\r\n        \r\n    };\r\n    \r\n    getAllUser = async () =>{\r\n        const res = await this.getResource('/posts/');\r\n        return res.map(this._transformUser);\r\n        \r\n    }\r\n\r\n\r\n    _transformUser = (user) =>{\r\n        return{\r\n            src: user.src,\r\n            alt: user.alt,\r\n            name: user.name,\r\n            id: user.id\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    getAllPhotos = async () =>{\r\n        const res = await this.getResource('/myPhotos/');\r\n        return res.map(this._transformPosts);\r\n        \r\n    }\r\n    _transformPosts = (photo) =>{\r\n        return{\r\n            src: photo.src,\r\n            alt: photo.alt,\r\n            id: photo.id\r\n        }\r\n        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}